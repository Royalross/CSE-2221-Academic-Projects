import components.simplereader.SimpleReader;
import components.simplereader.SimpleReader1L;
import components.simplewriter.SimpleWriter;
import components.simplewriter.SimpleWriter1L;

/**
 * Put a short phrase describing the program here. finding the square root using
 * Newton iternation
 *
 * @author Put your name here : Lughan Ross
 *
 */
public final class Newton4 {

    /**
     * Private constructor so this utility class cannot be instantiated.
     */
    private Newton4() {
    }

    /**
     * Computes estimate of square root of x to within relative error 0.01%.
     *
     * @param x
     *            positive number to compute square root of
     * @return estimate of square root
     */
    private final static double ERROR = .0001;
    private final static double idk = .5;

    /**
     * Computes estimate of square root of x to within relative error 0.01%.
     *
     * @param x
     *            positive number to compute square root of
     * @return estimate of square root
     */
    private static double sqrt(double x, double e) {

        double root = idk * (x + x / x);

        while (((root * root) - x) >= (ERROR * ERROR)) {
            root = (root + x / root) * idk;

        }
        return root;
    }

    /**
     * Main method.
     *
     * @param args
     *            the command line arguments
     */

    public static void main(String[] args) {
        SimpleReader in = new SimpleReader1L();
        SimpleWriter out = new SimpleWriter1L();

        out.print("Enter a positive number: ");
        double x = Double.parseDouble(in.nextLine());

        while (x > 0) {
            out.print("What is the relative error ?");
            double e = Double.parseDouble(in.nextLine());
            System.out.println(sqrt(x, e));
            out.print("Enter a positive number: ");
            x = Double.parseDouble(in.nextLine());

        }
        out.print("bye");
    }

}
